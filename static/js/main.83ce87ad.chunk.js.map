{"version":3,"sources":["components/headerComponent.js","components/bodyComponent.js","data/dataObjects.js","components/mainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","state","isNavOpen","isOffCanvasOpen","toggleOffCanvas","bind","toggleNav","this","setState","dataObjects","renderOffCanvas","renderObject","imagePath","image","href","pathURL","width","src","alt","className","name","genreName","id","offCanvasContents","map","color","container","dark","expand","fixed","class","onClick","isOpen","navbar","style","textDecoration","scrollable","toggle","autoFocus","items","altText","caption","key","Component","Body","isDescriptionShown","imageClicked","createStateDescriptionShown","clickedId","console","log","addId","contains","renderCard","tag","bottom","body","compatibility","descriptions","BodyContents","DATAOBJECTS","genreIndex","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83ce87ad.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Navbar,NavbarBrand,NavbarToggler,Collapse,Nav,NavItem,NavLink,Button,\r\n    NavbarText,Offcanvas,OffcanvasHeader,OffcanvasBody,Carousel,\r\n    CarouselIndicators,CarouselItem,CarouselCaption,CarouselControl,UncontrolledCarousel,\r\n    Card,CardBody,CardTitle,CardText,CardImg} from 'reactstrap';\r\n    import { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isOffCanvasOpen: false\r\n        };\r\n        this.toggleOffCanvas = this.toggleOffCanvas.bind(this);\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n    \r\n    toggleOffCanvas() {\r\n        this.setState({\r\n            isOffCanvasOpen: !this.state.isOffCanvasOpen\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const dataObjects = this.props.dataObjects;\r\n        const renderOffCanvas = (renderObject) => {\r\n            let imagePath = renderObject.image;\r\n            return(\r\n                <div key={renderObject.id}>\r\n                    <a href={renderObject.pathURL}>\r\n                        <img width=\"100%\" src={imagePath} alt=\"Game Screenshot\"/>\r\n                    </a>\r\n                    <div className=\"mt-3\"><h5>{renderObject.name}</h5></div>\r\n                    <div><small>{renderObject.genreName}</small></div>\r\n                    <hr className=\"visible\"></hr>\r\n                </div>\r\n            );\r\n        }\r\n        const offCanvasContents = dataObjects.map(renderObject => {\r\n            return(\r\n                <div key={renderObject.id} className=\"row\">\r\n                    {renderOffCanvas(renderObject)}\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return(\r\n            <div>\r\n                <Navbar\r\n                    color=\"dark\"\r\n                    container\r\n                    dark\r\n                    expand=\"md\"\r\n                    fixed=\"top\"\r\n                >\r\n                    <NavbarBrand href=\"/\">\r\n                    <i class=\"fa fa-gamepad\" aria-hidden=\"true\"></i> GameConnect\r\n                    </NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggleNav} />\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                    <Nav\r\n                        className=\"me-auto\"\r\n                        navbar\r\n                    >\r\n                        <NavItem>\r\n                            <Button \r\n                            color=\"primary\"\r\n                            onClick={this.toggleOffCanvas}>\r\n                                <i class=\"fa fa-user-circle\" aria-hidden=\"true\"></i> Play Now\r\n                            </Button>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    <NavbarText>\r\n                        <a href=\"https://kuijunming93.github.io/myWebpage/site2/\"\r\n                        style={{textDecoration: \"none\", color: \"lightblue\"}}>\r\n                            <i class=\"fa fa-arrow-circle-o-right\" aria-hidden=\"true\"></i> GoTo GrandFlix</a>\r\n                    </NavbarText>\r\n                    </Collapse>\r\n                </Navbar>\r\n                <Offcanvas\r\n                    scrollable\r\n                    isOpen={this.state.isOffCanvasOpen}\r\n                    toggle={this.toggleOffCanvas}\r\n                    autoFocus={true}>\r\n                    <OffcanvasHeader toggle={this.toggleOffCanvas}>\r\n                    <i class=\"fa fa-gamepad\" aria-hidden=\"true\"></i> Game List\r\n                    </OffcanvasHeader>\r\n                    <OffcanvasBody>\r\n                        <div className=\"container\">\r\n                        {offCanvasContents}\r\n                        <strong>\r\n                        Stay tuned for more to come..\r\n                        </strong>\r\n                        </div>\r\n                    </OffcanvasBody>\r\n                </Offcanvas>\r\n                <UncontrolledCarousel\r\n                items={[\r\n                    {\r\n                    altText: '',\r\n                    caption: 'test',\r\n                    key: 1,\r\n                    src: 'https://picsum.photos/id/123/1200/600'\r\n                    },\r\n                    {\r\n                    altText: '',\r\n                    caption: '',\r\n                    key: 2,\r\n                    src: 'https://picsum.photos/id/456/1200/600'\r\n                    },\r\n                    {\r\n                    altText: '',\r\n                    caption: '',\r\n                    key: 3,\r\n                    src: 'https://picsum.photos/id/678/1200/600'\r\n                    }\r\n                ]}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport {Collapse,Card,CardBody,CardTitle,\r\n    CardSubtitle,CardText,CardImg,Button, CardFooter} from 'reactstrap';\r\n\r\nclass Body extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isDescriptionShown: false\r\n            // memoryLoadedCount: 6\r\n        };\r\n        this.imageClicked = this.imageClicked.bind(this);\r\n        this.createStateDescriptionShown = this.createStateDescriptionShown.bind(this);\r\n        // this.updateMemoryLoadedCount = this.updateMemoryLoadedCount.bind(this);\r\n    }\r\n\r\n    imageClicked(clickedId){\r\n        console.log(\"Clicked\");\r\n        this.setState({\r\n            isDescriptionShown: !this.state.isDescriptionShown\r\n        });\r\n    }\r\n\r\n    createStateDescriptionShown(addId){\r\n        if (!this.state.contains(addId))\r\n            this.setState({\r\n                [addId]: false\r\n                // isDescriptionShown: this.state.isDescriptionShown.concat([false])\r\n            });\r\n        console.log(\"Created \" + this.state.addId);\r\n    }\r\n\r\n    // updateMemoryLoadedCount(){\r\n    //     this.setState({\r\n    //         memoryLoadedCount: this.props.dataObjects.length\r\n    //     });\r\n    //     console.log(\"Updated memory with count of \" + this.state.memoryLoadedCount);\r\n    // }\r\n\r\n    render() {\r\n        const dataObjects = this.props.dataObjects;\r\n        const renderCard = (renderObject) => {\r\n            // this.createStateDescriptionShown(renderObject.id);\r\n            let imagePath = renderObject.image;\r\n            return(\r\n                <Card>\r\n                    <CardBody>\r\n                    <CardTitle tag=\"h5\">\r\n                        {renderObject.name}\r\n                    </CardTitle>\r\n                    <CardText>\r\n                        <small className=\"text-muted\">\r\n                        {renderObject.genreName}\r\n                        </small>\r\n                    </CardText>\r\n                    </CardBody>\r\n                    <CardImg\r\n                    alt=\"Game Screenshot\"\r\n                    bottom\r\n                    src= {imagePath}\r\n                    width=\"100%\"\r\n                    onClick = {this.imageClicked}\r\n                    />\r\n                    <Collapse isOpen={this.state.isDescriptionShown}>\r\n                    <Card body>\r\n                        <CardTitle tag=\"h6\">Compatibility</CardTitle>\r\n                        <CardSubtitle>\r\n                            {renderObject.compatibility}\r\n                        </CardSubtitle>\r\n                        <CardText className=\"text-muted\">\r\n                            {renderObject.descriptions}</CardText>\r\n                        <Button color=\"primary\">Play</Button>\r\n                    </Card>\r\n                    </Collapse>\r\n                </Card>\r\n                \r\n            );\r\n        }\r\n\r\n        const BodyContents = dataObjects.map(renderObject => {\r\n            return(\r\n                <div key={renderObject.id} className=\"col-12 col-md-6 mt-1\">\r\n                    {renderCard(renderObject)}\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {BodyContents}\r\n                    {/* {this.updateMemoryLoadedCount()} */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Body;","export const DATAOBJECTS = [\r\n    {\r\n        id: 0,\r\n        name: 'World Chubs',\r\n        image:'/assets/images/WorldChubsWindow.jpg',\r\n        genreIndex: 0,\r\n        genreName: \"Local Multiplayer\",\r\n        compatibility: \"Recommended - PC, Tablet\\nNot Recommended - Mobile\",\r\n        descriptions: \"Supports local multiplayer via controller and keyboard controls.\",\r\n        pathURL: \"https://kuijunming93.github.io/unityGameDesign/Builds/WorldChubs/index.html\"\r\n    },\r\n    {\r\n        id: 1,\r\n        name: 'Sky Exterminator',\r\n        image:'/assets/images/SkyExterminatorWindow.jpg',\r\n        genreIndex: 1,\r\n        genreName: \"Arcade\",\r\n        compatibility: \"Recommended - PC, Tablet\\nNot Recommended - Mobile\",\r\n        descriptions: \"Best played in Tablet devices.\",\r\n        pathURL: \"https://kuijunming93.github.io/unityGameDesign/Builds/SkyExterminator/index.html\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Galaxy Defender 2.0',\r\n        image:'/assets/images/GalaxyDefender2.jpg',\r\n        genreIndex: 0,\r\n        genreName: \"Local Multiplayer\",\r\n        compatibility: \"Recommended - PC, Tablet\\nNot Recommended - Mobile\",\r\n        descriptions: \"Best played with friends in controller/gamepad controls.\",\r\n        pathURL: \"https://kuijunming93.github.io/unityGameDesign/Builds/GalaxyDefender2.0/index.html\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Grand Escape',\r\n        image:'/assets/images/GrandEscapeWindow.jpg',\r\n        genreIndex: 2,\r\n        genreName: \"Adventure\",\r\n        compatibility: \"Recommended - PC, Tablet, Mobile\",\r\n        descriptions: \"Supports single-player via keyboard or touch controls.\",\r\n        pathURL: \"https://kuijunming93.github.io/unityGameDesign/Builds/GrandEscape/index.html\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Galaxy Defender',\r\n        image:'/assets/images/GalaxyDefenderWindow.jpg',\r\n        genreIndex: 1,\r\n        genreName: \"Arcade\",\r\n        compatibility: \"Recommended - PC\\nNot Supported - Tablet, Mobile\",\r\n        descriptions: \"Supports single player - keyboard/controller controls only.\",\r\n        pathURL: \"https://kuijunming93.github.io/unityGameDesign/Builds/GalaxyDefender/index.html\"\r\n    }\r\n];","import React, { Component } from 'react';\r\nimport Header from \"./headerComponent\";\r\nimport Body from \"./bodyComponent\";\r\nimport { DATAOBJECTS } from '../data/dataObjects';\r\n\r\nclass Main extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            dataObjects: DATAOBJECTS\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Header dataObjects={this.state.dataObjects}/>\r\n                <Body dataObjects={this.state.dataObjects}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import './App.css';\nimport { Component } from 'react';\nimport Main from \"./components/mainComponent\";\n\nclass App extends Component{\n\n  render(){\n    return(\n      <div className=\"App\">\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'font-awesome/css/font-awesome.css';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}